namespace Connectivity_components
{
    internal class Program
    {
        static void Main(string[] args)
        {
            List<int> peaks = new List<int>() { 1, 2, 3, 4, 5 };
            int[,] matrix = new int[,]
            {
            { 0, 1, 2, 3, 4, 5 },            
            { 1, 0, 0, 1, 0, 1 },
            { 2, 0, 0, 0, 1, 0 },            
            { 3, 0, 1, 0, 0, 0 },
            { 4, 0, 0, 0, 0, 0 },            
            { 5, 0, 0, 0, 0, 0 }
            };
            List<int> queue = new List<int>();
            List<int> answer = new List<int>();
            bool bol = true;
            while (peaks.Count > 0) 
            {
                queue.Add(peaks[0]);
                while (queue.Count > 0)
                {
                    int delite = queue[0];
                    for (int i = 1; i < matrix.GetLength(0); i++)
                    {
                        if (queue.Contains(i) != bol && answer.Contains(i) != bol)
                        {
                            if (matrix[queue[0], i] == 1)
                            {
                                queue.Add(matrix[0, i]);
                            }
                        }
                    }
                    answer.Add(delite);
                    queue.Remove(delite);
                    peaks.Remove(delite);
                }
                for (int i = 0; i < answer.Count; i++) 
                {
                    Console.Write($"{answer[i]}\t");
                }
                Console.WriteLine();
                answer.Clear();
            }
            Console.ReadLine();
        }
    }
}
